// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using LMS_Demo.src.Models;

#nullable disable

namespace LMS_Demo.src.Migrations
{
	[DbContext(typeof(DataContext))]
	[Migration("20240119130253_adjust_Enrollment_nullables")]
	partial class adjust_Enrollment_nullables
	{
		/// <inheritdoc />
		protected override void BuildTargetModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder
					.HasAnnotation("ProductVersion", "7.0.13")
					.HasAnnotation("Relational:MaxIdentifierLength", 63);

			NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

			modelBuilder.Entity("LMS_Demo.src.Models.Course", b =>
					{
						b.Property<int>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("integer");

						NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

						b.Property<int>("Credits")
											.HasColumnType("integer");

						b.Property<string>("Description")
											.HasColumnType("text");

						b.Property<string>("Title")
											.IsRequired()
											.HasColumnType("text");

						b.HasKey("Id");

						b.ToTable("Courses");
					});

			modelBuilder.Entity("LMS_Demo.src.Models.Enrollment", b =>
					{
						b.Property<int>("UserId")
											.HasColumnType("integer");

						b.Property<int>("CourseId")
											.HasColumnType("integer");

						b.Property<int>("Grade")
											.HasColumnType("integer");

						b.Property<bool>("IsEnrolled")
											.HasColumnType("boolean");

						b.Property<bool>("IsPaid")
											.HasColumnType("boolean");

						b.Property<string>("ReceiptNumber")
											.HasColumnType("text");

						b.HasKey("UserId", "CourseId");

						b.HasIndex("CourseId");

						b.ToTable("Enrollments");
					});

			modelBuilder.Entity("LMS_Demo.src.Models.Role", b =>
					{
						b.Property<int>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("integer");

						NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

						b.Property<string>("Name")
											.IsRequired()
											.HasColumnType("text");

						b.HasKey("Id");

						b.ToTable("Roles");

						b.HasData(
											new
									{
										Id = 1,
										Name = "Admin"
									},
											new
									{
										Id = 2,
										Name = "Student"
									},
											new
									{
										Id = 3,
										Name = "Instructor"
									});
					});

			modelBuilder.Entity("LMS_Demo.src.Models.User", b =>
					{
						b.Property<int>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("integer");

						NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

						b.Property<string>("Email")
											.IsRequired()
											.HasColumnType("text");

						b.Property<string>("FirstName")
											.IsRequired()
											.HasColumnType("text");

						b.Property<string>("LastName")
											.HasColumnType("text");

						b.Property<string>("Password")
											.IsRequired()
											.HasColumnType("text");

						b.Property<int>("RoleId")
											.HasColumnType("integer");

						b.HasKey("Id");

						b.HasIndex("RoleId");

						b.ToTable("Users");
					});

			modelBuilder.Entity("LMS_Demo.src.Models.Enrollment", b =>
					{
						b.HasOne("LMS_Demo.src.Models.Course", "Course")
											.WithMany("Enrollments")
											.HasForeignKey("CourseId")
											.OnDelete(DeleteBehavior.Cascade)
											.IsRequired();

						b.HasOne("LMS_Demo.src.Models.User", "User")
											.WithMany("Enrollments")
											.HasForeignKey("UserId")
											.OnDelete(DeleteBehavior.Cascade)
											.IsRequired();

						b.Navigation("Course");

						b.Navigation("User");
					});

			modelBuilder.Entity("LMS_Demo.src.Models.User", b =>
					{
						b.HasOne("LMS_Demo.src.Models.Role", "Role")
											.WithMany("Users")
											.HasForeignKey("RoleId")
											.OnDelete(DeleteBehavior.Cascade)
											.IsRequired();

						b.Navigation("Role");
					});

			modelBuilder.Entity("LMS_Demo.src.Models.Course", b =>
					{
						b.Navigation("Enrollments");
					});

			modelBuilder.Entity("LMS_Demo.src.Models.Role", b =>
					{
						b.Navigation("Users");
					});

			modelBuilder.Entity("LMS_Demo.src.Models.User", b =>
					{
						b.Navigation("Enrollments");
					});
#pragma warning restore 612, 618
		}
	}
}
